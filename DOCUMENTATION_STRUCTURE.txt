Documentation Structure

    Intro
        Simple framework that implements Mocks / Stubs and Spies in as simple a format is is reasonable.

    Implementing a Spy
        What is a Spy?
        Example
        Explain the basic struture

    Implementing a Stub
        What is a Stub?
        Example

    Implementing a Mock - String format (check term in Fowler's article)
        What is a Mock?
        Example

    Implementing a Mock - Recorder format
        What is a Mock Test Recorder?
        Example

    Implementing an Apex handler
        Why would you?
        Example
            Simple interface
            Salesforce interface

    How do I choose?

        If you are implementing a Spy, you probably want it to also be a stub

        Spy vs Mock
            Spies:
                Match the standard unit test format better
                Allow you to test for values that you don't know prior to the test running (e.g. Ids of records)

            Mocks:
                Have less setup
                Can be confusing to people who aren't familiar with them
                Require you to know what the values are going to be prior the test runs
                Are more prescriptive on order of execution

            Because Spies and Mocks are implemented in the same class, you can stub some methods and mock others.

        Mock String vs Mock Recorder
            Recorder will give you compile errors if the interface of the object your testing changes
            Cannot 'any parameter' when you use a recorder - tests may become brittle

    References

        Martin Fowler's blog article
        Unit Test Patterns book
